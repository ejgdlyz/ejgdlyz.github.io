<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL 入门</title>
      <link href="/2019/11/02/SQL%20SERVER/"/>
      <url>/2019/11/02/SQL%20SERVER/</url>
      
        <content type="html"><![CDATA[<h5 id="技巧："><a href="#技巧：" class="headerlink" title="技巧："></a>技巧：</h5><h6 id="1-where-条件-is-null"><a href="#1-where-条件-is-null" class="headerlink" title="1.where 条件 is null"></a>1.where 条件 is null</h6><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> ename <span class="token keyword">from</span> emp <span class="token keyword">where</span> mgr <span class="token operator">is</span> <span class="token boolean">null</span></code></pre><h6 id="2-between"><a href="#2-between" class="headerlink" title="2.between"></a>2.between</h6><p> 包含num1和num2</p><h6 id="3-where-group-by-having-order-by-的顺序"><a href="#3-where-group-by-having-order-by-的顺序" class="headerlink" title="3.where group by having order by 的顺序"></a>3.where group by having order by 的顺序</h6><p>SELECT</p><p>FROM</p><p>WHERE</p><p>GROUP BY</p><p>HAVING</p><p>ORDER BY</p><h6 id="4-更新多个记录"><a href="#4-更新多个记录" class="headerlink" title="4.更新多个记录"></a>4.更新多个记录</h6><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> stu <span class="token keyword">add</span> 平均成绩之和 <span class="token keyword">float</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu<span class="token keyword">update</span> stu <span class="token keyword">set</span>  平均成绩之和<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> 平均成绩<span class="token operator">+</span>新平均成绩 <span class="token keyword">from</span> stu <span class="token number">a</span> <span class="token keyword">where</span> <span class="token number">a</span><span class="token punctuation">.</span>学号<span class="token operator">=</span>stu<span class="token punctuation">.</span>学号<span class="token punctuation">)</span></code></pre><h5 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a><strong>数据完整性</strong></h5><h6 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h6><p>实体完整性：表的每一行数据就称为一个实体，实体完整性是指 每一行记录是唯一的，不重复的</p><p>​    标识列：系统自动生成，永远不会重复</p><p>​    主键：唯一 非空</p><p>​    唯一键：唯一 但是可以为null，只能空一次 </p><p>域完整性：域就是字段，域完整性就是为了保证字段的值是合理和准确的</p><p>​    非空 类型，check约束，默认值，关系（主外键约束）</p><p>自定义完整性：用户自己定义的约束规则</p><p>​    check约束 存储过程 触发器</p><p>引用完整性：一个表的字段的值引用另外一个表的某一个字段，</p><p>被引用的表称为主表，引用表就是称为从表或者外键表</p><p>​    1.选择外键表去创建主外键关系</p><p>​    2.建立主外键关系的字段类型和意义必须一致</p><p>​    3.建立关系的字段 在主表中必须是主键或者是唯一键</p><p>​    4.添加数据的时候先添加主表数据，再添加外键表</p><p>​    5.删除数据的时候先删除外键表数据，再删除主表</p><p>关系建立后表的级联操作</p><p>​    1.不执行任何操作：该报错就报错，能删除就删除</p><p>​    2.级联：删除主表记录，对应的从表记录也将被删除</p><p>​    3.set null ：删除主表，从表对应记录的字段值=null，前提是这个字段可以设置为null</p><p>​    4.set default :删除主表，从表对应记录的字段值=设置的默认值，前提是这个字段已经设置了默认值</p><h6 id="使用代码创建约束"><a href="#使用代码创建约束" class="headerlink" title="使用代码创建约束"></a><strong>使用代码创建约束</strong></h6><p>–种类：主键约束（primary key PK） 唯一键约束(unique UQ) 检查约束（check CK ） 默认值约束(default DF)</p><p>–外键约束(Foreign key FK)</p><p><strong>–创建约束的语法：</strong></p><p>–alter table 表名 </p><p>–add constraint 约束的名字(以简写作为前缀) 约束的类型(字段,表达式 值)</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">use</span> test<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> Teacher <span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>Name nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>Gender <span class="token keyword">bit</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>Age <span class="token keyword">int</span> <span class="token punctuation">,</span>Salary money<span class="token punctuation">,</span>Birthday <span class="token keyword">datetime</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span></code></pre><p><strong>teacher表</strong></p><img src="http://116.62.203.42/img/1.jpg" alt="img" style="zoom:80%;"> <p><strong>classes表</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> classes<span class="token punctuation">(</span>cid <span class="token keyword">int</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> PK_classes_cid <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">,</span>cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><img src="http://116.62.203.42/img/2.jpg" alt="img" style="zoom:80%;"> <p>–1.将id设置为主键</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> Teacher<span class="token keyword">add</span> <span class="token keyword">constraint</span> PK_Teacher_Id <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span></code></pre><p>–2.设置name为唯一键</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'UQ_Teacher_Name'</span><span class="token punctuation">)</span>​    <span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token keyword">drop</span> <span class="token keyword">constraint</span> UQ_Teacher_Name<span class="token keyword">alter</span> <span class="token keyword">table</span> Teacher <span class="token keyword">add</span> <span class="token keyword">constraint</span> UQ_Teacher_Name <span class="token keyword">unique</span><span class="token punctuation">(</span>Name<span class="token punctuation">)</span></code></pre><p>–3.设置年龄0-100之间</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'CK_Teacher_Age'</span><span class="token punctuation">)</span>​    <span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token keyword">drop</span> <span class="token keyword">constraint</span> CK_Teacher_Age<span class="token keyword">alter</span> <span class="token keyword">table</span> teacher<span class="token keyword">ADD</span> <span class="token keyword">constraint</span> CK_Teacher_Age <span class="token keyword">check</span><span class="token punctuation">(</span>Age<span class="token operator">></span><span class="token number">0</span> <span class="token operator">and</span> Age<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">)</span></code></pre><p>–4.为birthday添加默认值</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'DF_Teacher_Birthday'</span><span class="token punctuation">)</span>​    <span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token keyword">drop</span> <span class="token keyword">constraint</span> DF_Teacher_Birthday<span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token keyword">add</span> <span class="token keyword">constraint</span> DF_Teacher_Birthday <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token string">'1999-9-9'</span><span class="token punctuation">)</span> <span class="token keyword">for</span> birthday  <span class="token comment" spellcheck="true">--for是说明为哪一个字段添加</span></code></pre><p>–5.为ClassId添加外键约束</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token comment" spellcheck="true">--从表的某一个字段，引用主表的某一个字段</span><span class="token keyword">add</span> <span class="token keyword">constraint</span> FK_teacher_ClassId <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>classid<span class="token punctuation">)</span> <span class="token keyword">references</span> classes<span class="token punctuation">(</span>cid<span class="token punctuation">)</span></code></pre><h6 id="级联操作"><a href="#级联操作" class="headerlink" title="级联操作"></a>级联操作</h6><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'FK_teacher_ClassId'</span><span class="token punctuation">)</span>​    <span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token keyword">drop</span> <span class="token keyword">constraint</span> FK_teacher_ClassId<span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token comment" spellcheck="true">--从表的某一个字段，引用主表的某一个字段</span><span class="token keyword">with</span> <span class="token keyword">nocheck</span> <span class="token comment" spellcheck="true">--不检查现有数据</span><span class="token keyword">add</span> <span class="token keyword">constraint</span> FK_teacher_ClassId <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>classid<span class="token punctuation">)</span> <span class="token keyword">references</span> classes<span class="token punctuation">(</span>cid<span class="token punctuation">)</span><span class="token comment" spellcheck="true">--on delete Set null --删除主表数据，从表引用的数据设为null</span></code></pre><p><strong>subject表</strong></p><img src="http://116.62.203.42/img/3.jpg" alt="img" style="zoom:80%;"> <p><strong>student表</strong></p><img src="http://116.62.203.42/img/4.jpg" alt="img" style="zoom:80%;"> <p><strong>result表</strong></p><img src="http://116.62.203.42/img/5.jpg" alt="img" style="zoom:80%;"> <p>1.设置外键</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> dept<span class="token punctuation">(</span>depno <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">table</span> emp<span class="token punctuation">(</span>empno <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>ename nvarchar<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>deptno <span class="token keyword">int</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token keyword">references</span> dept<span class="token punctuation">(</span>deptno<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>外键的数据类型和主键一致</p><p>外键只能指向主键</p><p>保持数据的完整性</p><h5 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h5><p>1.显示每个雇员的年工资(基础工资加奖金)</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> sal<span class="token operator">*</span><span class="token number">13</span><span class="token operator">+</span>isnull<span class="token punctuation">(</span>comm<span class="token operator">*</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp</code></pre><p>2.显示所有员工中的最低工资和该员工的名字</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> ename <span class="token keyword">from</span> emp <span class="token keyword">where</span> sal<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">)</span></code></pre><h5 id="表的复杂查询"><a href="#表的复杂查询" class="headerlink" title="表的复杂查询"></a>表的复杂查询</h5><h6 id="1-Group-by-和having-语句"><a href="#1-Group-by-和having-语句" class="headerlink" title="1.Group by 和having 语句"></a><strong>1.Group by 和having 语句</strong></h6><p>Group by对查询结果进行分组统计</p><p>Having用于     限制分组产生的结果</p><p>例：</p><p>显示每个部门的平均工资和最高工资</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span>deptno <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno</code></pre><p>显示每种部门每种岗位的平均工资和最低工资</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span>deptno <span class="token punctuation">,</span>job <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno<span class="token punctuation">,</span>job <span class="token keyword">order</span> <span class="token keyword">by</span> deptno</code></pre><p>总结：</p><p>① 如果select语句中同时包含，group by,having,order by时，那么顺序是：group by having oreder by</p><p>② 在选择列中如果有列，分组和表达式，那么这些列和表达式必须有一个出现在group by子句中，否则就会出错。</p><h6 id="2-多表查询"><a href="#2-多表查询" class="headerlink" title="2.多表查询"></a><strong>2.多表查询</strong></h6><p>查询部门名字为sales的雇员名字</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">,</span>dept <span class="token keyword">where</span> dname<span class="token operator">=</span>’sales’<span class="token operator">and</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno</code></pre><p>(注意笛卡尔集)</p><p>显示雇员名，雇员工资及所在部门的名字，部门号</p><p>如果两张表有相同的字段名，则需要带表名（别名）</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> ename<span class="token punctuation">,</span>sal<span class="token punctuation">,</span>dname<span class="token punctuation">,</span><span class="token operator">*</span><span class="token operator">*</span>emp<span class="token punctuation">.</span>deptno<span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">,</span>dept <span class="token keyword">where</span> dept<span class="token punctuation">.</span>deptno<span class="token operator">=</span>emp<span class="token punctuation">.</span>deptno</code></pre><p>或</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> ename<span class="token punctuation">,</span>sal<span class="token punctuation">,</span>dname<span class="token punctuation">,</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">e</span><span class="token punctuation">.</span>deptno<span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token number">e</span><span class="token punctuation">,</span>dept <span class="token number">d</span> <span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>deptno<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>deptno</code></pre><p>显示部门号为10的部门名，员工名和工资</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>emp<span class="token punctuation">.</span>sal <span class="token keyword">from</span> dept<span class="token punctuation">,</span>emp <span class="token keyword">where</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">and</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>dept<span class="token punctuation">.</span>deptno</code></pre><h6 id="3-自连接"><a href="#3-自连接" class="headerlink" title="3.自连接"></a><strong>3.自连接</strong></h6><p>指的是在同一张表中的连接查询</p><p>例：</p><p>显示每个员工和他上级的名字</p><p>把emp看作两张表，一个是a,一个是b</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token number">a</span><span class="token punctuation">.</span>ename 雇员<span class="token punctuation">,</span><span class="token number">b</span><span class="token punctuation">.</span>ename 老板<span class="token keyword">from</span> emp <span class="token number">a</span><span class="token punctuation">,</span>emp <span class="token number">b</span> <span class="token keyword">where</span> <span class="token number">a</span><span class="token punctuation">.</span>mgr<span class="token operator">=</span><span class="token number">b</span><span class="token punctuation">.</span>empno</code></pre><h6 id="4-子查询"><a href="#4-子查询" class="headerlink" title="4.子查询"></a><strong>4.子查询</strong></h6><p>指的是嵌入在其他sql语句中的select语句</p><p>1）子查询的分类：</p><p>独立子查询</p><p>子查询可以独立运行</p><p>相关子查询</p><p>子查询引用了父查询的结果</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> stuno<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> stuno <span class="token keyword">from</span> result <span class="token keyword">where</span> stuno<span class="token operator">=</span>stu<span class="token punctuation">.</span>stuno<span class="token punctuation">)</span></code></pre><p>作为结果集(查询7班的男生信息)，一定要为结果集<strong>起个别名</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> classid<span class="token operator">=</span>’<span class="token number">7</span>’<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> classid<span class="token operator">=</span>’<span class="token number">7</span>’<span class="token punctuation">)</span> <span class="token keyword">as</span> tmp <span class="token keyword">where</span> sex<span class="token operator">=</span>’男’</code></pre><p>2）单行子查询</p><p>只返回一行数据的子查询语句</p><p>3）多行查询</p><p>返回多行数据的查询</p><p>例：显示与SMITH同一部门的所有员工</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> deptno<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> deptno <span class="token keyword">from</span> emp <span class="token keyword">where</span> ename<span class="token operator">=</span>’smith’<span class="token punctuation">)</span></code></pre><p>查询和部门10工作相同的雇员名字，岗位，工资，部门号</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> ename<span class="token punctuation">,</span>job<span class="token punctuation">,</span>sal<span class="token punctuation">,</span>deptno <span class="token keyword">from</span> emp <span class="token keyword">where</span> job <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> job <span class="token keyword">from</span> emp <span class="token keyword">where</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span></code></pre><p>在from子句中使用子查询</p><p>如何显示高于部门平均工资的员工信息</p><p>首先求出各个部门的平均工资</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> 平均工资<span class="token punctuation">,</span>deptno <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno<span class="token punctuation">;</span></code></pre><p>把查询结果当作一个临时表看待</p><pre class=" language-sql"><code class="language-sql"><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> myavg<span class="token punctuation">,</span>deptno <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno<span class="token punctuation">)</span> tmp</code></pre><p>最终结果</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> myavg<span class="token punctuation">,</span>deptno <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno<span class="token punctuation">)</span> tmp <span class="token keyword">where</span> emp<span class="token punctuation">.</span>deptno<span class="token operator">=</span>tmp<span class="token punctuation">.</span>deptno <span class="token operator">and</span> emp<span class="token punctuation">.</span>sal<span class="token operator">></span>tmp<span class="token punctuation">.</span>myavg</code></pre><p>查询最近一次office考试的最高分和最低分</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>stuResult<span class="token punctuation">)</span> 最高分<span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>stuResult<span class="token punctuation">)</span> <span class="token keyword">as</span> 最低分<span class="token keyword">from</span> stu <span class="token keyword">where</span> subjectid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> subjectid <span class="token keyword">from</span> subject <span class="token keyword">where</span> subject<span class="token operator">=</span>’office’<span class="token punctuation">)</span> <span class="token operator">and</span> examdate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>examdate<span class="token punctuation">)</span> <span class="token keyword">from</span> result <span class="token keyword">where</span> subjectid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> subjectid <span class="token keyword">from</span> subject <span class="token keyword">where</span> subject<span class="token operator">=</span>’office’<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h6 id="5-分页查询"><a href="#5-分页查询" class="headerlink" title="5. 分页查询"></a><strong>5.</strong> <strong>分页查询</strong></h6><p>1)不用分页函数</p><p>字段 ename deptno sal hiredate</p><p>显示第一个到第四个的入职的雇员</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--top后的数表示要选择几条记录</span></code></pre><p>显示第四个到第9个入职的职员信息</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> ename <span class="token operator">not</span> <span class="token operator">in</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">3</span> ename <span class="token keyword">from</span> emp <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate<span class="token punctuation">)</span> <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate<span class="token punctuation">;</span></code></pre><p>用查询结果创建新表（不存在）</p><p>Select *（可选字段名） into 新表名 from 表名</p><p>如何删除一张表的重复记录</p><p>tid    tname    tpasswd</p><p>1        aaa         123</p><p>1        aaa         123</p><p>1        aaa         123</p><p>2        bbb        456</p><p>2        bbb        456</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> <span class="token keyword">into</span> emp <span class="token keyword">from</span>  test<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--创建一个临时表</span><span class="token keyword">delete</span> <span class="token keyword">from</span> test <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--删除原表的所有数据 </span><span class="token keyword">insert</span> <span class="token keyword">into</span> test <span class="token keyword">select</span> <span class="token keyword">from</span> <span class="token keyword">temp</span> <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--将临时表的数据插入原表</span><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">temp</span> <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--删除临时表</span></code></pre><p>2）使用分页函数</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> ROW_NUMBER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">order</span> <span class="token keyword">by</span> tid<span class="token punctuation">)</span> id<span class="token punctuation">,</span><span class="token operator">*</span> <span class="token keyword">from</span> stu<span class="token punctuation">)</span> tmp <span class="token keyword">where</span> id <span class="token operator">>=</span><span class="token number">5</span> <span class="token operator">and</span> id<span class="token operator">&lt;=</span><span class="token number">8</span></code></pre><p>注意：如果使用生成行号的子查询作为结果集，那么必须为结果集添加别名，并且为行号添加名称</p><p>ROW_NUMBER() over(排序字段)：根据指定的字段排序，对排序之后的每一行添加一个不间断的行号</p><h6 id="6-维护数据的完整性"><a href="#6-维护数据的完整性" class="headerlink" title="6.维护数据的完整性"></a>6.维护数据的完整性</h6><p>Not null</p><p>Unique 当定义了唯一约束后，该值不能重复，可以空但是最多只能有一个</p><p>Primary key</p><p>一张表只能有一个主键，但是可以有多个unique约束</p><p>复合主键</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> test3<span class="token punctuation">(</span>tid <span class="token keyword">int</span><span class="token punctuation">,</span>tname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tpasswd nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>tid<span class="token punctuation">,</span>tname<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>Foreign key(外键)</p><p>定义主表和从表之间的关系，外键的约束要定义在从表上，主表必须有主键约束或者unique约束</p><p>Check 强制数据必须满足的条件</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> test4<span class="token punctuation">(</span>tid <span class="token keyword">int</span><span class="token punctuation">,</span>tname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tpasswd nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tage <span class="token keyword">int</span> <span class="token keyword">check</span><span class="token punctuation">(</span>tage<span class="token operator">>=</span><span class="token number">0</span> <span class="token operator">and</span> tage<span class="token operator">&lt;=</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>商品售货系统表设计案例</p><img src="http://116.62.203.42/img/8.jpg" alt="img" style="zoom:80%;"> <pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> goods<span class="token punctuation">(</span>goodsid nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>goodsname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>unitprice <span class="token keyword">numeric</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>unitprice<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>category nvarchar<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>category <span class="token operator">in</span><span class="token punctuation">(</span><span class="token string">'食物'</span><span class="token punctuation">,</span><span class="token string">'日用'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>provider nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">table</span> customer<span class="token punctuation">(</span>customerid nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>custname nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>custaddress nvarchar<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>email nvarchar<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>sex <span class="token keyword">nchar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">check</span> <span class="token punctuation">(</span>sex <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'男'</span><span class="token punctuation">,</span>cardid nvarchar<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">table</span> purchase<span class="token punctuation">(</span>customerid nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token keyword">references</span> customer<span class="token punctuation">(</span>customerid<span class="token punctuation">)</span><span class="token punctuation">,</span>goodsid nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token keyword">references</span> goods<span class="token punctuation">(</span>goodsid<span class="token punctuation">)</span><span class="token punctuation">,</span>nums <span class="token keyword">int</span> <span class="token keyword">check</span> <span class="token punctuation">(</span>nums<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h5 id="case-语句"><a href="#case-语句" class="headerlink" title="case 语句"></a><strong>case 语句</strong></h5><p>1)如果case后面跟表达式或字段，那么这种结构只能做等值判断，不能判断null值</p><p>case 表达式/字段</p><p> when 值then 自定义值</p><p>else 自定义值</p><p>end</p><p>2) 如果case后面没有接表达式或值，那么这种结构相当于if…else</p><p>,它可以判断null值</p><p>case </p><p> when 值then 自定义值</p><p>else 自定义值</p><p>end</p><h5 id="视图"><a href="#视图" class="headerlink" title="视图"></a><strong>视图</strong></h5><h6 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h6><p>视图就是一张虚拟表，根据用户的查询创建的命令，使用视图就像使用表一样</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> vw_getinfo<span class="token keyword">create</span> <span class="token keyword">view</span> view_emp <span class="token keyword">as</span> <span class="token keyword">select</span> ename<span class="token punctuation">,</span>hiredate<span class="token punctuation">,</span>sal<span class="token keyword">from</span> emp<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> view_emp<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">view</span> view_emp<span class="token punctuation">;</span></code></pre><h6 id="使用代码创建视图"><a href="#使用代码创建视图" class="headerlink" title="使用代码创建视图"></a>使用代码创建视图</h6><p>–create view vw_视图名称</p><p>–as </p><p>–查询的命令</p><p>–go</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">use</span> ls<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'vw_stuinfo'</span><span class="token punctuation">)</span> <span class="token keyword">drop</span> <span class="token keyword">view</span> vw_stuinfogo<span class="token keyword">create</span> <span class="token keyword">view</span> vw_stuinfo <span class="token comment" spellcheck="true">--这个创建语句必须是批处理的第一句</span><span class="token keyword">as</span>​    <span class="token comment" spellcheck="true">--select * from stu where 性别='男'</span>​    <span class="token comment" spellcheck="true">--update stu 不能在视图中使用update,delete,insert</span>​    <span class="token comment" spellcheck="true">--视图中只能使用一条select命令</span>​    <span class="token comment" spellcheck="true">--视图不能使用order by，除非同时使用了top</span>​    <span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">99.9999</span> <span class="token keyword">percent</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">order</span> <span class="token keyword">by</span> 姓名go</code></pre><h6 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h6><p>–对视图一般不去执行增加删除和修改的操作，需要注意的是，</p><p>–这些操作会直接影响原始的物理表,d但是这些操作局限于单表</p><p>–使用视图</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> vw_stuinfo<span class="token keyword">update</span> vw_stuinfo <span class="token keyword">set</span> java<span class="token operator">=</span>java<span class="token number">-100</span> <span class="token keyword">where</span> 性别<span class="token operator">=</span><span class="token string">'男'</span></code></pre><h5 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a><strong>局部变量</strong></h5><h6 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h6><p>–语法</p><p>–declare @变量的名字 变量的类型=[默认值]</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@name</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'zzy'</span><span class="token keyword">print</span> <span class="token variable">@name</span><span class="token operator">+</span><span class="token string">'1346'</span><span class="token keyword">select</span> <span class="token variable">@name</span>go</code></pre><h6 id="赋值-set-select"><a href="#赋值-set-select" class="headerlink" title="赋值 set  select"></a>赋值 set  select</h6><p>–如果后面是完整的子查询，那么两个没有任何的区别</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@name</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@name</span><span class="token operator">=</span><span class="token string">'3radsaf'</span><span class="token keyword">select</span> <span class="token variable">@name</span><span class="token operator">=</span><span class="token string">'456789'</span></code></pre><p>–查询比学号44的年龄大的学生信息</p><pre class=" language-sql"><code class="language-sql">go<span class="token keyword">declare</span> <span class="token variable">@obj</span> <span class="token keyword">int</span><span class="token keyword">select</span> <span class="token variable">@obj</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> 年龄 <span class="token keyword">from</span> stu <span class="token keyword">where</span> <span class="token keyword">right</span><span class="token punctuation">(</span>cast<span class="token punctuation">(</span> cast <span class="token punctuation">(</span>学号 <span class="token keyword">as</span> <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">as</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'44'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--set @obj=(select 年龄 from stu where right(cast( cast (学号 as decimal(11,0) )as varchar(11) ),2)='44')</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> 年龄<span class="token operator">></span><span class="token variable">@obj</span></code></pre><h6 id="两种赋值方式的区别"><a href="#两种赋值方式的区别" class="headerlink" title="两种赋值方式的区别"></a>两种赋值方式的区别</h6><p>–1. </p><p>–set一次只能为一个变量赋值,select支持一次为多个变量</p><pre class=" language-sql"><code class="language-sql">go <span class="token keyword">declare</span> <span class="token variable">@name</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@age</span> <span class="token keyword">int</span><span class="token keyword">select</span> <span class="token variable">@name</span><span class="token operator">=</span><span class="token string">'111'</span><span class="token punctuation">,</span><span class="token variable">@age</span><span class="token operator">=</span><span class="token number">20</span><span class="token comment" spellcheck="true">--set @name='111',@age=20</span></code></pre><p>–2.</p><p>–如果=后是不完整的sql语句，那么当语句返回多行一列的时候,select会得到最后一个值</p><pre class=" language-sql"><code class="language-sql">go <span class="token keyword">declare</span> <span class="token variable">@name</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@age</span> <span class="token keyword">int</span><span class="token operator">=</span><span class="token number">20</span><span class="token comment" spellcheck="true">--当没有用 EXISTS 引入子查询时，在选择列表中只能指定一个表达式。</span><span class="token comment" spellcheck="true">--子查询返回的值不止一个。当子查询跟随在 =、!=、&lt;、&lt;=、>、>= 之后，或子查询用作表达式时，这种情况是不允许的。 </span><span class="token comment" spellcheck="true">--set @name =(select 姓名 from stu)</span><span class="token comment" spellcheck="true">--set @name = 姓名 from stu  set后只能接独立子查询</span><span class="token keyword">select</span> <span class="token variable">@name</span> <span class="token operator">=</span> 姓名 <span class="token keyword">from</span> stu<span class="token keyword">print</span> <span class="token variable">@name</span> <span class="token comment" spellcheck="true">--最后一个名字</span></code></pre><p>–如果=后边的查询语句没有返回值，那么select会保留默认值</p><pre class=" language-sql"><code class="language-sql">go <span class="token keyword">declare</span> <span class="token variable">@name</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'safaf'</span><span class="token punctuation">,</span><span class="token variable">@age</span> <span class="token keyword">int</span><span class="token operator">=</span><span class="token number">20</span><span class="token comment" spellcheck="true">--set @name=(select 姓名 from stu where right(cast( cast (学号 as decimal(11,0) )as varchar(11) ),2)='88')</span><span class="token comment" spellcheck="true">--等价于select @name=(select 姓名 from stu where right(cast( cast (学号 as decimal(11,0) )as varchar(11) ),2)='88')</span><span class="token keyword">select</span> <span class="token variable">@name</span><span class="token operator">=</span>姓名 <span class="token keyword">from</span> stu <span class="token keyword">where</span> <span class="token keyword">right</span><span class="token punctuation">(</span>cast<span class="token punctuation">(</span> cast <span class="token punctuation">(</span>学号 <span class="token keyword">as</span> <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">as</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'88'</span><span class="token keyword">print</span> <span class="token variable">@name</span><span class="token keyword">print</span> <span class="token string">'13214'</span></code></pre><h6 id="变量使用案例"><a href="#变量使用案例" class="headerlink" title="变量使用案例"></a>变量使用案例</h6><p>–查询最近一次office考试的最高分和最低分</p><pre class=" language-sql"><code class="language-sql">go <span class="token keyword">declare</span> <span class="token variable">@subName</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'office'</span><span class="token comment" spellcheck="true">--科目名称</span><span class="token keyword">declare</span> <span class="token variable">@subId</span> <span class="token keyword">int</span> <span class="token comment" spellcheck="true">--科目id</span><span class="token keyword">set</span> <span class="token variable">@subId</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> subId <span class="token keyword">from</span> subject <span class="token keyword">where</span> subName<span class="token operator">=</span><span class="token variable">@subName</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--获取科目id</span><span class="token keyword">declare</span> <span class="token variable">@time</span> <span class="token keyword">datetime</span><span class="token comment" spellcheck="true">--最近一次考试时间</span><span class="token keyword">select</span> <span class="token variable">@time</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>examDate<span class="token punctuation">)</span> <span class="token keyword">from</span> Result <span class="token keyword">where</span> subId<span class="token operator">=</span><span class="token variable">@subId</span> <span class="token comment" spellcheck="true">--获得这一科目最近考试时间</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>stuResult<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>stuResult<span class="token punctuation">)</span> <span class="token keyword">from</span> Result <span class="token keyword">where</span> subId<span class="token operator">=</span><span class="token variable">@subId</span> <span class="token operator">and</span> examDate<span class="token operator">=</span><span class="token variable">@time</span></code></pre><h5 id="全局变量（系统变量）"><a href="#全局变量（系统变量）" class="headerlink" title="全局变量（系统变量）"></a><strong>全局变量（系统变量）</strong></h5><p>全局变量必须以标记@@作为前缀，如</p><p>@@version</p><p>全局变量由系统定义和维护，我们只能读取，不能修改全局变量的值</p><h5 id="IF-ELSE"><a href="#IF-ELSE" class="headerlink" title="IF ELSE"></a><strong>IF ELSE</strong></h5><p>–没有bool值，只有条件表达式</p><p>–没有{}，只有begin..end</p><p>–可以多重，可以嵌套</p><p>–如果包含的语句只有一句，可以不使用begin…end </p><p>–if或else必须有处理语句，否则会报错</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>​    <span class="token keyword">begin</span> ​    <span class="token keyword">print</span> <span class="token string">'2313'</span>​    <span class="token keyword">print</span> <span class="token string">'5846'</span>​    <span class="token keyword">end</span></code></pre><p>–计算java成绩的平均成绩，如果平均分超过60分输出前三名的成绩。否则输出后三名的成绩</p><pre class=" language-sql"><code class="language-sql">go<span class="token keyword">declare</span> <span class="token variable">@avg</span> <span class="token keyword">float</span><span class="token keyword">set</span> <span class="token variable">@avg</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>java<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token variable">@avg</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">@avg</span><span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span>​    <span class="token keyword">begin</span>​    <span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">order</span> <span class="token keyword">by</span> java <span class="token keyword">desc</span>​    <span class="token keyword">end</span><span class="token keyword">else</span>​    <span class="token keyword">begin</span>​    <span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">3</span> <span class="token operator">*</span>  <span class="token keyword">from</span> stu <span class="token keyword">order</span> <span class="token keyword">by</span> java​    <span class="token keyword">end</span></code></pre><img src="http://116.62.203.42/img/10.png" alt="img" style="zoom:80%;"> <h5 id="while"><a href="#while" class="headerlink" title="while"></a><strong>while</strong></h5><p>–没有bool值，只有条件表达式</p><p>–没有{}，只有begin..end</p><p>–可以多重，可以嵌套</p><p>–可以使用continue/break语句</p><p>如果java考试布局个的人数超过了半数，题目出难了，就让每个同学的分数加2分，直到不及格的人数少于一半</p><pre class=" language-sql"><code class="language-sql">go<span class="token keyword">declare</span> <span class="token variable">@nopassnum</span> <span class="token keyword">int</span><span class="token keyword">declare</span> <span class="token variable">@totalnum</span> <span class="token keyword">int</span><span class="token keyword">select</span> <span class="token variable">@totalnum</span><span class="token operator">=</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">set</span> <span class="token variable">@nopassnum</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> java <span class="token operator">&lt;</span><span class="token number">60</span> <span class="token operator">and</span> java<span class="token operator">&lt;</span><span class="token number">98</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">@nopassnum</span><span class="token operator">>=</span><span class="token variable">@totalnum</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>​    <span class="token keyword">begin</span>​    <span class="token keyword">update</span> stu <span class="token keyword">set</span> java<span class="token operator">+</span><span class="token operator">=</span><span class="token number">2</span> ​    <span class="token keyword">set</span> <span class="token variable">@nopassnum</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> java <span class="token operator">&lt;</span><span class="token number">60</span> <span class="token operator">and</span> java<span class="token operator">&lt;</span><span class="token number">98</span><span class="token punctuation">)</span>​    <span class="token keyword">end</span></code></pre><h5 id="事务"><a href="#事务" class="headerlink" title="事务"></a><strong>事务</strong></h5><p>事务：这些语句要么都成功执行，要么都不执行。事务只是一种处理机制</p><p>–事务是对有可能对表的数据进行更改的操作而言（增加，删除，修改），对查询没用</p><p>–事务的特点：CUID</p><p>–1.原子性：事务不可以再分，事务时原子工作单元，对于其数据的修改，要么全部执行，要不全部不执行</p><p>–2.一致性：事务处理后，数据要保持某种程度的一致性</p><p>–3.隔离性：每一个事务都是独立的，不受其他事务的影响</p><p>–4.持久性：事务一旦提交，对数据的修改永久保留</p><p>name        salary</p><p>aa                1000</p><p>bb                1000</p><p>–使用事务进行转账</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> bank <span class="token keyword">add</span> <span class="token keyword">constraint</span> bank_salary <span class="token keyword">check</span><span class="token punctuation">(</span>salary <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--添加约束，salary必须>0 </span><span class="token keyword">declare</span> <span class="token variable">@err</span> <span class="token keyword">int</span> <span class="token operator">=</span><span class="token number">0</span><span class="token keyword">begin</span> <span class="token keyword">transaction</span>​    <span class="token keyword">update</span> bank <span class="token keyword">set</span> salary<span class="token operator">-</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'aa'</span>​    <span class="token keyword">set</span> <span class="token variable">@err</span><span class="token operator">+</span><span class="token operator">=</span>@<span class="token variable">@ERROR</span> <span class="token comment" spellcheck="true">--累加此行的错误号</span>​    <span class="token comment" spellcheck="true">--if(@err&lt;>0)--有错误,</span>​    <span class="token comment" spellcheck="true">--    rollback transaction--不能某一句出现错误，就进行回滚或者提交</span>​    <span class="token keyword">update</span> bank <span class="token keyword">set</span> salary<span class="token operator">+</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'bb'</span>​    <span class="token keyword">set</span> <span class="token variable">@err</span><span class="token operator">+</span><span class="token operator">=</span>@<span class="token variable">@ERROR</span>​    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">@err</span><span class="token operator">&lt;></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--有错误,只有全部语句执行完之后，在进行判断</span>​        <span class="token keyword">rollback</span> <span class="token keyword">transaction</span>​    <span class="token keyword">else</span>​        <span class="token keyword">commit</span> <span class="token keyword">transaction</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> bank</code></pre><p><strong>COMMIT：</strong>提交更改；</p><p><strong>ROLLBACK：</strong>回滚更改；</p><p><strong>SAVEPOINT：</strong>在事务内部创建一系列可以 ROLLBACK 的还原点；</p><p>SAVEPOINT 是事务中的一个状态点，使得我们可以将事务回滚至特定的点，而不是将整个事务都撤销。</p><p>savepoint</p><p>SAVEPOINT SAVEPOINT_NAME;</p><p>ROLLBACK TO SAVEPOINT_NAME;</p><h5 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a><strong>存储过程</strong></h5><h6 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h6><p>存储过程–就像数据库中运行方法（函数）</p><p>–方法说明：</p><p>–方法名称：参数 调用 返回值</p><p>–参数：主要是一一对应的原则</p><p>–    1.类型对应：子类可以替换父类 int–double</p><p>–    2.数量对应：默认值，可变参数</p><p>–    3.顺序对应：可以使用 参数：值的方法调用</p><p>–返回值：通过return 返回值 ，但是只能返回单个值</p><p>–可以通过ref/out扩展方法的’返回值’</p><p>–创建存储过程的语法</p><p>–go</p><p>–create procedure usp_存储过程名称</p><p>–(形参) 可以在这个里面定义参数</p><p>–as–相当于方法体</p><p>–{</p><p>–    自定义局部变量</p><p>–    逻辑语句</p><p>–}</p><p>–go</p><h6 id="无参数"><a href="#无参数" class="headerlink" title="无参数"></a>无参数</h6><p>–.查询所有学生信息</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'usp_getAllInfo'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">procedure</span> usp_getAllInfo<span class="token operator">*</span><span class="token operator">*</span>go<span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">create</span> <span class="token keyword">procedure</span> usp_getAllInfo <span class="token comment" spellcheck="true">--简写proc</span><span class="token keyword">as</span> ​    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token operator">*</span><span class="token operator">*</span>go<span class="token operator">*</span><span class="token operator">*</span><span class="token comment" spellcheck="true">--调用存储过程，获取学生信息</span><span class="token keyword">execute</span>  usp_getAllInfo         <span class="token comment" spellcheck="true">--简写exec</span></code></pre><h6 id="单参数"><a href="#单参数" class="headerlink" title="单参数"></a>单参数</h6><p>查询指定性别的学生信息</p><pre class=" language-sql"><code class="language-sql"> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'usp_getAllInfoBySex'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">proc</span> usp_getAllInfoBySexgo<span class="token keyword">create</span> <span class="token keyword">proc</span> usp_getAllInfoBySex​    <span class="token variable">@sex</span> char<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">--形参只是声明，不是定义，所以不需要declare</span><span class="token keyword">as</span>​    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> sex<span class="token operator">=</span><span class="token variable">@sex</span>go<span class="token keyword">exec</span> usp_getAllInfoBySex <span class="token string">'男'</span><span class="token comment" spellcheck="true">--相当于'男孩'</span></code></pre><h6 id="多参数"><a href="#多参数" class="headerlink" title="多参数"></a>多参数</h6><p>获取指定性别和班级名称的学生信息</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name <span class="token operator">=</span><span class="token string">'usp_getAllInfoBySexAndClassName'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">proc</span> usp_getAllInfoBySexAndClassNamego<span class="token keyword">create</span> <span class="token keyword">proc</span> usp_getAllInfoBySexAndClassName<span class="token variable">@sex</span> char<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@className</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">as</span>    ​    <span class="token keyword">declare</span> <span class="token variable">@classId</span> <span class="token keyword">int</span> <span class="token comment" spellcheck="true">--科目ID</span>​    <span class="token keyword">set</span> <span class="token variable">@classId</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> grade <span class="token keyword">where</span> className<span class="token operator">=</span><span class="token variable">@className</span><span class="token punctuation">)</span>​    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Student <span class="token keyword">where</span> sex<span class="token operator">=</span><span class="token variable">@sex</span> <span class="token operator">and</span> classId<span class="token operator">=</span><span class="token variable">@classId</span>go<span class="token keyword">exec</span> usp_getAllInfoBySexAndClassName <span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'三班'</span></code></pre><h6 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a><strong>默认参数</strong></h6><p>–创建有默认值的存储过程</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name <span class="token operator">=</span><span class="token string">'usp_getAllInfoBySexAndClassName'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">proc</span> usp_getAllInfoBySexAndClassNamego<span class="token keyword">create</span> <span class="token keyword">proc</span> usp_getAllInfoBySexAndClassName<span class="token variable">@className</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@sex</span> char<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'女'</span>  <span class="token comment" spellcheck="true">--往往会将有默认值的参数写在所有参数列表的最后，这样实参列表就可以省略default</span><span class="token keyword">as</span>    ​    <span class="token keyword">declare</span> <span class="token variable">@classId</span> <span class="token keyword">int</span> <span class="token comment" spellcheck="true">--科目ID</span>​    <span class="token keyword">set</span> <span class="token variable">@classId</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> grade <span class="token keyword">where</span> className<span class="token operator">=</span><span class="token variable">@className</span><span class="token punctuation">)</span>​    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Student <span class="token keyword">where</span> sex<span class="token operator">=</span><span class="token variable">@sex</span> <span class="token operator">and</span> classId<span class="token operator">=</span><span class="token variable">@classId</span>go<span class="token comment" spellcheck="true">--参数传递顺序一致：第一个实参默认就是传递给第一个形参 </span><span class="token comment" spellcheck="true">--如果有默认值，那么可以使用default</span><span class="token keyword">exec</span> usp_getAllInfoBySexAndClassName <span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">'三班'</span><span class="token comment" spellcheck="true">--也可以使用 参数=值的方式调用存储过程，这样就与顺序没有关系了，</span><span class="token comment" spellcheck="true">--一旦使用了@name=value 之后，那么后续的参数就必须以@name=value的形式传递</span><span class="token comment" spellcheck="true">--exec usp_getAllInfoBySexAndClassName @className='三班',@sex='男'</span></code></pre><h6 id="创建带有输出参数的存储过程"><a href="#创建带有输出参数的存储过程" class="headerlink" title="创建带有输出参数的存储过程"></a><strong>创建带有输出参数的存储过程</strong></h6><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--根据性别和班级查询学员，同时返回总人数和指定性别的人数</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'usp_getInfoAndCount'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">proc</span> usp_getInfoAndCountgo<span class="token keyword">create</span> <span class="token keyword">proc</span> usp_getInfoAndCount<span class="token variable">@totalnum</span> <span class="token keyword">int</span> output<span class="token punctuation">,</span><span class="token comment" spellcheck="true">--如果一个参数添加了output修饰，那么说明:它是一个输出参数,</span><span class="token comment" spellcheck="true">--说明了你会向服务器请求返回这个参数的值,服务器也知道标识了output的参数在以后需要返回</span><span class="token variable">@clanum</span> <span class="token keyword">int</span> output <span class="token punctuation">,</span><span class="token comment" spellcheck="true">--指定班级和性别的人数</span><span class="token variable">@className</span> nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">--输入参数:需要用户传入值</span><span class="token variable">@sex</span> char<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">as</span>​    <span class="token keyword">declare</span> <span class="token variable">@classId</span> <span class="token keyword">int</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> classId <span class="token keyword">from</span> grade <span class="token keyword">where</span> className<span class="token operator">=</span><span class="token variable">@className</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--根据班级名称获取班级ID</span>​    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Student <span class="token keyword">where</span> classId<span class="token operator">=</span><span class="token variable">@classId</span> <span class="token operator">and</span> sex<span class="token operator">=</span><span class="token variable">@sex</span>​    <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> Student <span class="token comment" spellcheck="true">--总人数</span>​    <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> Student <span class="token keyword">where</span> sex<span class="token operator">=</span><span class="token variable">@sex</span> <span class="token operator">and</span> classId<span class="token operator">=</span><span class="token variable">@classId</span>go</code></pre><h6 id="调用有输出参数的存储过程"><a href="#调用有输出参数的存储过程" class="headerlink" title="调用有输出参数的存储过程"></a>调用有输出参数的存储过程</h6><p>–服务器返回值，需要创建对应的变量来接收</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@tnum</span> <span class="token keyword">int</span> <span class="token punctuation">,</span><span class="token variable">@cnum</span> <span class="token keyword">int</span> <span class="token keyword">execute</span> usp_getInfoAndCount <span class="token variable">@tnum</span><span class="token punctuation">,</span><span class="token variable">@cnum</span><span class="token punctuation">,</span><span class="token string">'三班'</span><span class="token keyword">print</span> <span class="token variable">@tnum</span><span class="token keyword">print</span> <span class="token variable">@cnum</span></code></pre><h6 id="使用output的情况："><a href="#使用output的情况：" class="headerlink" title="使用output的情况："></a><strong>使用output的情况：</strong></h6><p><strong>1.返回多个值 2.返回的数据类型为非整型</strong></p><p><strong>（return 只能返回整型）</strong>–返回指定人数</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'usp_getNameByNo'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">proc</span> usp_getNameByNogo<span class="token keyword">create</span> <span class="token keyword">proc</span> usp_getNameByNo<span class="token variable">@cid</span> <span class="token keyword">int</span><span class="token keyword">as</span> ​    <span class="token keyword">declare</span> <span class="token variable">@cnt</span> <span class="token keyword">int</span>  ​    <span class="token keyword">set</span> <span class="token variable">@cnt</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> Student <span class="token keyword">where</span> classId<span class="token operator">=</span> <span class="token variable">@cid</span><span class="token punctuation">)</span>​    <span class="token comment" spellcheck="true">--return 只能返回整数值</span>​    <span class="token keyword">return</span> <span class="token variable">@cnt</span>go<span class="token comment" spellcheck="true">--执行存储过程，接收return的返回值</span><span class="token keyword">declare</span> <span class="token variable">@count</span> <span class="token keyword">int</span> <span class="token keyword">execute</span> <span class="token variable">@count</span><span class="token operator">=</span> usp_getNameByNo <span class="token number">6</span><span class="token keyword">print</span> <span class="token variable">@count</span></code></pre><h5 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a><strong>触发器</strong></h5><p>–语法:</p><p>–create trigger tr_触发器名称</p><p>–on 表 after(for)/instead of 增加删除(delete) 修改</p><p>–as</p><p>–任意的逻辑代码 –存储过程</p><p>–go</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name <span class="token operator">=</span><span class="token string">'tr_emp_insert'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">trigger</span> tr_emp_insertgo <span class="token keyword">create</span> <span class="token keyword">trigger</span> tr_emp_insert<span class="token keyword">on</span> emp <span class="token keyword">for</span> <span class="token keyword">insert</span> <span class="token comment" spellcheck="true">--为emp表创建触发器，在你对grade表进行插入操作后触发</span><span class="token keyword">as</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> empgo<span class="token keyword">insert</span> <span class="token keyword">into</span> emp<span class="token punctuation">(</span>ename<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\<span class="token operator">-</span><span class="token operator">-</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> inserted <span class="token comment" spellcheck="true">--操作之后，新表(操作过后的表)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> deleted <span class="token comment" spellcheck="true">--操作之前，旧表（操作前的表）</span></code></pre><p>–两个临时表</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name <span class="token operator">=</span><span class="token string">'tr_emp_insert'</span><span class="token punctuation">)</span>​    <span class="token keyword">drop</span> <span class="token keyword">trigger</span> tr_emp_insertgo<span class="token keyword">create</span> <span class="token keyword">trigger</span> tr_emp_insert<span class="token keyword">on</span> emp <span class="token keyword">for</span> <span class="token keyword">insert</span> <span class="token keyword">as</span><span class="token keyword">print</span> <span class="token string">'inserted表存储操作之后的 与当前操作相关的数据 ，而与之前表的数据无关'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> inserted<span class="token keyword">print</span> <span class="token string">'deleted表存储操作之前的数据'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> deletedgo<span class="token keyword">insert</span> <span class="token keyword">into</span> emp<span class="token punctuation">(</span>ename<span class="token punctuation">,</span>sex<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span>emp表<span class="token keyword">create</span> <span class="token keyword">trigger</span> StuIDU <span class="token keyword">on</span> emp<span class="token keyword">for</span> <span class="token keyword">insert</span><span class="token punctuation">,</span><span class="token keyword">delete</span> <span class="token punctuation">,</span><span class="token keyword">update</span><span class="token keyword">as</span><span class="token keyword">declare</span> <span class="token variable">@insertnum</span> <span class="token keyword">int</span> <span class="token punctuation">,</span><span class="token variable">@deletenum</span> <span class="token keyword">int</span><span class="token keyword">set</span> <span class="token variable">@insertnum</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> inserted<span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@deletenum</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> deleted<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token variable">@insertnum</span> <span class="token operator">></span><span class="token number">0</span> <span class="token operator">and</span>  <span class="token variable">@deletenum</span><span class="token operator">></span><span class="token number">0</span>​    <span class="token keyword">print</span> cast<span class="token punctuation">(</span><span class="token variable">@insertnum</span> <span class="token keyword">as</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'条记录被更新'</span><span class="token keyword">else</span>​    <span class="token keyword">if</span> <span class="token variable">@insertnum</span> <span class="token operator">></span><span class="token number">0</span>​        <span class="token keyword">print</span> cast<span class="token punctuation">(</span><span class="token variable">@insertnum</span> <span class="token keyword">as</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'条记录被插入'</span>​    <span class="token keyword">else</span> ​        <span class="token keyword">print</span> cast<span class="token punctuation">(</span><span class="token variable">@deletenum</span> <span class="token keyword">as</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'条记录被删除'</span>    go</code></pre><h5 id="练习："><a href="#练习：" class="headerlink" title="练习："></a><strong>练习：</strong></h5><p>1)–查询图书的信息，要求图书的价格显示为：</p><p>–价格为null :显示为价格未知</p><p>–价格为10-20：显示为价格10-20</p><p>–价格为20-50：显示为价格适中</p><p>–其他：原样显示</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> bookid<span class="token punctuation">,</span>bookname<span class="token punctuation">,</span><span class="token keyword">case</span> <span class="token keyword">when</span> price <span class="token operator">is</span> <span class="token boolean">null</span> <span class="token keyword">then</span> <span class="token string">'价格未知'</span><span class="token keyword">when</span> price <span class="token operator">&lt;</span><span class="token number">20</span> <span class="token operator">and</span> price <span class="token operator">>=</span><span class="token number">10</span> <span class="token keyword">then</span> <span class="token string">'价格在10-20之间'</span><span class="token keyword">when</span> price <span class="token operator">&lt;</span><span class="token number">30</span> <span class="token operator">and</span> price <span class="token operator">>=</span><span class="token number">20</span> <span class="token keyword">then</span> <span class="token string">'价格适中'</span> <span class="token keyword">else</span> <span class="token keyword">convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>price<span class="token punctuation">)</span><span class="token keyword">end</span> <span class="token keyword">as</span> 价格 <span class="token keyword">from</span> book</code></pre><p>2)</p><p>子查询：一个查询中还包含着另外n个查询</p><p>分类：独立子查询（直接运行子查询语句）相关子查询（子查询中引用了父查询的结果）</p><p>使用方法:1.子查询作为条件：如果跟在&gt; &lt; &gt;= &lt;= …后面要保证子查询只返回了一个值</p><p>A.如果子查询返回了一行多列值，可以使用exists/not exists，否则报错</p><p>B.如果返回了多行一列值，可以使用in /not in</p><p>2.子查询可以作为结果集</p><p>A.如果需要用到子查询中的字段，必须保证字段有名字（需要添加新的列名）</p><p>B.子查询做结果集必须命名</p><p>3.子查询作为列的值</p><p>–查询学号是19的学生参加最近一次office课程考试的成绩,要求输出学生的姓名，成绩</p><p>–1.子查询</p><p>–2.如果没有相应的数据，则可以更改数据表中的数据</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> Student<span class="token punctuation">.</span>studentName<span class="token punctuation">,</span>Result<span class="token punctuation">.</span>studentResult <span class="token keyword">from</span> Student <span class="token keyword">inner</span> <span class="token keyword">join</span> Result <span class="token keyword">on</span> Student<span class="token punctuation">.</span>studentNo<span class="token operator">=</span>Result<span class="token punctuation">.</span>studentNo <span class="token keyword">where</span> Student<span class="token punctuation">.</span>studentNo<span class="token operator">=</span><span class="token number">19</span> <span class="token operator">and</span> ExamDate<span class="token operator">=</span><span class="token punctuation">(</span>​    <span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>ExamDate<span class="token punctuation">)</span> <span class="token keyword">from</span> Result <span class="token keyword">where</span> subjectId<span class="token operator">=</span><span class="token punctuation">(</span>​        <span class="token keyword">select</span> subjectId <span class="token keyword">from</span> Subject <span class="token keyword">where</span> SubjectName<span class="token operator">=</span><span class="token string">'office'</span> <span class="token punctuation">)</span> <span class="token operator">and</span> studentNo<span class="token operator">=</span><span class="token number">19</span>​    <span class="token punctuation">)</span><span class="token operator">and</span> subjectId<span class="token operator">=</span><span class="token punctuation">(</span>​    <span class="token keyword">select</span> subjectId <span class="token keyword">from</span> Subject <span class="token keyword">where</span> SubjectName<span class="token operator">=</span><span class="token string">'office'</span>​    <span class="token punctuation">)</span></code></pre><p>–使用变量</p><pre class=" language-sql"><code class="language-sql">go<span class="token keyword">declare</span> <span class="token variable">@subjectName</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'office'</span><span class="token comment" spellcheck="true">--科目名称</span><span class="token keyword">declare</span> <span class="token variable">@subjectId</span> <span class="token keyword">int</span> <span class="token keyword">set</span> <span class="token variable">@subjectId</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> subjectId <span class="token keyword">from</span> subject <span class="token keyword">where</span> subjectName<span class="token operator">=</span><span class="token variable">@subjectName</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--科目名称</span><span class="token keyword">declare</span> <span class="token variable">@time</span> <span class="token keyword">datetime</span><span class="token comment" spellcheck="true">--考试日期</span><span class="token keyword">select</span> <span class="token variable">@time</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>examDate<span class="token punctuation">)</span> <span class="token keyword">from</span> Result <span class="token keyword">where</span> subjectId<span class="token operator">=</span><span class="token variable">@subjectId</span> <span class="token operator">and</span> studentNo<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token keyword">select</span> Student<span class="token punctuation">.</span>studentName<span class="token punctuation">,</span>Result<span class="token punctuation">.</span>studentResult <span class="token keyword">from</span> Student <span class="token keyword">inner</span> <span class="token keyword">join</span> Result <span class="token keyword">on</span> Student<span class="token punctuation">.</span>studentNo<span class="token operator">=</span>Result<span class="token punctuation">.</span>studentNo <span class="token keyword">where</span> Student<span class="token punctuation">.</span>studentNo<span class="token operator">=</span><span class="token number">19</span> <span class="token operator">and</span> ExamDate<span class="token operator">=</span><span class="token variable">@time</span> <span class="token operator">and</span> subjectId<span class="token operator">=</span><span class="token variable">@subjectId</span></code></pre><p>3）检查学生office最近一次考试的成绩是否有不及格，如有，没人加2分，高于95的学生不加分，直至所有学生及格</p><pre class=" language-sql"><code class="language-sql">go<span class="token keyword">declare</span> <span class="token variable">@subjectName</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'office'</span><span class="token comment" spellcheck="true">--科目名称</span><span class="token keyword">declare</span> <span class="token variable">@subjectId</span> <span class="token keyword">int</span> <span class="token keyword">set</span> <span class="token variable">@subjectId</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> subjectId <span class="token keyword">from</span> subject <span class="token keyword">where</span> subjectName<span class="token operator">=</span><span class="token variable">@subjectName</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--科目名称</span><span class="token keyword">declare</span> <span class="token variable">@time</span> <span class="token keyword">datetime</span><span class="token comment" spellcheck="true">--考试日期</span><span class="token keyword">select</span> <span class="token variable">@time</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>examDate<span class="token punctuation">)</span> <span class="token keyword">from</span> Result <span class="token keyword">where</span> subjectId<span class="token operator">=</span><span class="token variable">@subjectId</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>​    <span class="token keyword">begin</span>​        <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Result <span class="token keyword">where</span> subjectId<span class="token operator">=</span><span class="token variable">@subjectId</span> <span class="token operator">and</span> examDate<span class="token operator">=</span><span class="token variable">@time</span> <span class="token operator">and</span> studentResult<span class="token operator">&lt;</span><span class="token number">60</span><span class="token punctuation">)</span>​        <span class="token keyword">begin</span>​            <span class="token keyword">update</span> Result <span class="token keyword">set</span>  studentResult<span class="token operator">+</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">where</span> studentResult<span class="token operator">&lt;=</span><span class="token number">95</span> <span class="token operator">and</span> subjectId<span class="token operator">=</span><span class="token variable">@subjectId</span> <span class="token operator">and</span> examDate<span class="token operator">=</span><span class="token variable">@time</span>​        <span class="token keyword">end</span>​        <span class="token keyword">else</span> ​            <span class="token keyword">break</span><span class="token punctuation">;</span>​    <span class="token keyword">end</span></code></pre><p>4）打印图案</p><p>–★</p><p>–★★</p><p>–★★★</p><p>–★★★★</p><p>–★★★★★</p><pre class=" language-sql"><code class="language-sql">go<span class="token keyword">declare</span> <span class="token variable">@rownum</span> <span class="token keyword">int</span> <span class="token operator">=</span><span class="token number">1</span><span class="token keyword">declare</span> <span class="token variable">@colnum</span> <span class="token keyword">int</span> <span class="token operator">=</span><span class="token number">1</span><span class="token keyword">declare</span> <span class="token variable">@graph</span> nvarchar<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'★'</span><span class="token comment" spellcheck="true">--set @graph+='★★★'</span><span class="token comment" spellcheck="true">--print @graph</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">@rownum</span><span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">)</span>​    <span class="token keyword">begin</span>​        <span class="token comment" spellcheck="true">--set @colnum=1</span>​        <span class="token comment" spellcheck="true">--set @graph=''</span>​        <span class="token comment" spellcheck="true">--while(@colnum&lt;=@rownum)</span>​        <span class="token comment" spellcheck="true">--    begin</span>​                <span class="token comment" spellcheck="true">--set @colnum+=1</span>​        <span class="token keyword">print</span> <span class="token variable">@graph</span>​                <span class="token keyword">set</span> <span class="token variable">@graph</span><span class="token operator">+</span><span class="token operator">=</span><span class="token string">'★'</span>​            <span class="token comment" spellcheck="true">--end</span>​        <span class="token keyword">set</span> <span class="token variable">@rownum</span><span class="token operator">+</span><span class="token operator">=</span><span class="token number">1</span> ​    <span class="token keyword">end</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> sql   </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql server sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown简介</title>
      <link href="/2019/11/01/%E7%AE%80%E5%8D%95%E6%96%87%E7%AB%A0%E7%A4%BA%E4%BE%8B/"/>
      <url>/2019/11/01/%E7%AE%80%E5%8D%95%E6%96%87%E7%AB%A0%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h5 id="文章简单介绍"><a href="#文章简单介绍" class="headerlink" title="文章简单介绍"></a>文章简单介绍</h5><h6 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h6><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span></code></pre><h6 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h6><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> xxx<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署hexo走过的坑</title>
      <link href="/2019/08/16/%E9%83%A8%E7%BD%B2hexo%E8%B5%B0%E8%BF%87%E7%9A%84%E5%9D%91/"/>
      <url>/2019/08/16/%E9%83%A8%E7%BD%B2hexo%E8%B5%B0%E8%BF%87%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h3 id="hexo的搭建"><a href="#hexo的搭建" class="headerlink" title="hexo的搭建"></a>hexo的搭建</h3><h4 id="提示hexo命令找不到"><a href="#提示hexo命令找不到" class="headerlink" title="提示hexo命令找不到"></a>提示hexo命令找不到</h4><ul><li><h5 id="在系统的环境变量中加入自己博客系统的hexo路径"><a href="#在系统的环境变量中加入自己博客系统的hexo路径" class="headerlink" title="在系统的环境变量中加入自己博客系统的hexo路径"></a>在系统的环境变量中加入自己博客系统的hexo路径</h5></li><li><p>比如我的：J:\hexo\node_modules.bin</p></li><li><p>hexo就是我的博客系统所在的文件夹</p></li></ul><h4 id="git命令找不到"><a href="#git命令找不到" class="headerlink" title="git命令找不到"></a>git命令找不到</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
